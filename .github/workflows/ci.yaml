name: CI

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.4.0

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install
      - run: pnpm run lint:ci
        continue-on-error: true

  #  test:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node: [ 18 ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - uses: pnpm/action-setup@v2.4.0
#
#      - uses: actions/setup-node@v4
#        with:
#          node-version: ${{ matrix.node }}
#          cache: 'pnpm'
#
#      - run: pnpm install
#      - run: pnpm run test:ci

  build:
    needs: [ lint ] # , test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.4.0

      - name: Find Version
        if: startsWith(github.ref, 'refs/tags/')
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: image
          tags: type=semver,pattern={{version}}

      - name: Set Cargo.toml version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sed -i'' "s/0\\.0\\.0-git/${{ steps.meta.outputs.version }}/" projects/egsch/base/package.json
          sed -i'' "s/0\\.0\\.0-git/${{ steps.meta.outputs.version }}/" projects/egsch/data/package.json
          sed -i'' "s/0\\.0\\.0-git/${{ steps.meta.outputs.version }}/" projects/egsch/layout/package.json

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install
      - run: pnpm run build:ci

      - uses: actions/upload-artifact@v3
        with:
          name: egsch
          path: dist

  publish:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    strategy:
      matrix:
        module: [base, data, layout]

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.4.0

      - uses: actions/download-artifact@v3
        with:
          name: egsch
          path: dist

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - run: pnpm publish --no-git-checks --access=public
        working-directory: dist/egsch/${{ matrix.module }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
